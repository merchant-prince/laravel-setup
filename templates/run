#! /usr/bin/env python3

import os
from argparse import ArgumentParser, REMAINDER
from collections import namedtuple
from pathlib import Path
from subprocess import run
from types import SimpleNamespace

if __name__ == "__main__":
    # argument parsing
    parser = namedtuple('Parser', ('main', 'subparser', 'subparsers'))(
        main := ArgumentParser(
            prog='run',
            description='A script to run the current Laravel project stack.',
            epilog='Deja Vu!',
            allow_abbrev=False
        ),
        main.add_subparsers(
            title='Action',
            description='The action to take.',
            dest='action',
            required=True
        ),
        SimpleNamespace()
    )

    # artisan
    parser.subparsers.artisan = parser.subparser.add_parser(
        'artisan',
        description='Run the artisan CLI on the current project.',
        epilog='Art!',
        add_help=True,
        allow_abbrev=False
    )
    parser.subparsers.artisan.add_argument(
        'command',
        nargs=REMAINDER,
        help='The artisan command to be run.'
    )

    # composer
    parser.subparsers.composer = parser.subparser.add_parser(
        'composer',
        description='Run a composer command on the current project.',
        epilog='Compose!',
        add_help=True,
        allow_abbrev=False
    )
    parser.subparsers.composer.add_argument(
        'command',
        nargs=REMAINDER,
        help='The composer command to be run.'
    )

    # yarn
    parser.subparsers.yarn = parser.subparser.add_parser(
        'yarn',
        description='Run a yarn command on the current project.',
        epilog='Weave!',
        add_help=True,
        allow_abbrev=False
    )
    parser.subparsers.yarn.add_argument(
        'command',
        nargs=REMAINDER,
        help='The yarn command to be run.'
    )

    # parse arguments
    arguments = parser.main.parse_args()

    if arguments.action == 'artisan':
        run(('docker-compose', 'exec', '--user', 'www-data', 'php', 'php', 'artisan', *arguments.command))

    elif arguments.action == 'composer':
        run(('docker-compose', 'exec', '--user', 'www-data', 'php', 'composer', *arguments.command))

    elif arguments.action == 'yarn':
        run(('docker', 'run',
             '--rm',
             '--interactive',
             '--tty',
             '--user', f'{os.geteuid()}:{os.getegid()}',
             '--workdir', '/application',
             '--mount',
             'type=bind,'
             f"source={Path(f'{Path(__file__).parent}/application/${project_name}')},"
             'destination=/application',
             'node:latest', 'yarn', *arguments.command))
